name: Deploy to Server

on:
  push:
    branches:
      - main  # Adjust the branch you want to deploy from

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'  # Set to your .NET version

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release --output ./publish

    - name: Create tarball of the publish directory
      run: tar -czf web-app.tar.gz -C ./publish .

    - name: Upload artifact to server
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        source: web-app.tar.gz
        target: /home/$(whoami)/

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        script: |
          # Define variables
          BLUE_SERVICE="bg-blue.service"
          GREEN_SERVICE="bg-green.service"
          BLUE_PATH="/var/www/blue"
          GREEN_PATH="/var/www/green"
          CURRENT_PATH="/var/www/current"  # Symlink to the currently active deployment
          ARTIFACT_PATH="/home/$(whoami)/web-app.tar.gz"

          # Determine which environment to deploy to
          if [ -L $CURRENT_PATH ] && [ "$(readlink -f $CURRENT_PATH)" = "$BLUE_PATH" ]; then
              DEPLOY_PATH="$GREEN_PATH"
              SERVICE_NAME="$GREEN_SERVICE"
              OTHER_SERVICE="$BLUE_SERVICE"
          else
              DEPLOY_PATH="$BLUE_PATH"
              SERVICE_NAME="$BLUE_SERVICE"
              OTHER_SERVICE="$GREEN_SERVICE"
          fi

          # Stop the running application
          sudo systemctl stop $SERVICE_NAME

          # Remove old release from the target directory
          sudo rm -rf $DEPLOY_PATH/*

          # Create deployment directory if not exists
          sudo mkdir -p $DEPLOY_PATH

          # Unpack the build artifact to the deployment path
          sudo tar -xzf $ARTIFACT_PATH -C $DEPLOY_PATH

          # Start the application
          sudo systemctl start $SERVICE_NAME

          # Update the symlink to point to the new deployment
          sudo ln -sfn $DEPLOY_PATH $CURRENT_PATH

          # Clean up
          rm $ARTIFACT_PATH


          
